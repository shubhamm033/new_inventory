emailNotifications = 'shubhanshu.soni@qcin.org'
notificationSent    = false

def sendNotification(buildChanged)
{
    if (notificationSent)
    {
        return
    }
    notificationSent = true

    if (currentBuild.currentResult == 'SUCCESS')
    {
        // notify users when the build is back to normal
        mail to: emailNotifications,
            subject: "Build fixed: ${currentBuild.fullDisplayName}",
            body: "The build is back to normal ${env.BUILD_URL}"
    }
    else if ((currentBuild.currentResult == 'FAILURE') && buildChanged)
    {
        // notify users when the Pipeline first fails
        mail to: emailNotifications,
            subject: "Build failed: ${currentBuild.fullDisplayName}",
            body: "Something went wrong with ${env.BUILD_URL}"
    }
    else if ((currentBuild.currentResult == 'FAILURE'))
    {
        // notify users when they check into a broken build
        mail to: emailNotifications,
            subject: "Build failed (again): ${currentBuild.fullDisplayName}",
            body: "Something is still wrong with ${env.BUILD_URL}"
    }
}

pipeline {
    agent any
    stages {
        stage('Build') {
            steps {
                echo "Docker build executing.."
                sh('chmod +x -R DevOps/dockerbuild.sh')
                sh('DevOps/dockerbuild.sh')
                echo  "Docker executed"
            }
        }
        stage('Test') {
            steps {
                echo 'Curl testing...'
                echo 'Curl Tested'
            }
        }
        stage('Deploy') {
            steps {
                echo 'Deployed... Bye'
            }
        }
    }
    post {
        changed {
            sendNotification buildChanged:true
        }
        failure {
            sendNotification buildChanged:false
        }
    }
}